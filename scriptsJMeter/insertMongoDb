import com.mongodb.client.MongoClients
import com.mongodb.client.MongoCollection
import com.mongodb.client.MongoDatabase
import org.bson.Document
import com.mongodb.MongoException  // Import for more specific exception handling


try {
    def mongoClient = MongoClients.create(connectionString)
    def database = mongoClient.getDatabase(databaseName)
    def collection = database.getCollection("commits")

    def newCommit = new Document()
    newCommit.append("subject", "test subject")
    newCommit.append("message", "test message with several descriptive words")

    collection.insertOne(newCommit)

    def insertedId = newCommit.get("_id")

    if (insertedId != null) {
        SampleResult.setSuccessful(true)
        SampleResult.setResponseCodeOK()
        SampleResult.setResponseMessage("User inserted successfully.  ID: " + insertedId)
        SampleResult.setResponseData("Inserted Document: " + newCommit.toJson(), "UTF-8") // Use newCommit, not newUser
    } else {
        SampleResult.setSuccessful(false)
        SampleResult.setResponseCode("500")
        SampleResult.setResponseMessage("Failed to insert user.  No ID returned.")
    }

    mongoClient.close()

} catch (com.mongodb.MongoException me) {
  
    SampleResult.setSuccessful(false)
    SampleResult.setResponseCode("500")  // Or another appropriate code
    SampleResult.setResponseMessage("MongoDB Error: " + me.getMessage())
    SampleResult.setResponseData(me.getStackTraceAsString(), "UTF-8") // Correct use of getStackTraceAsString()
    log.error("MongoDB Error in script", me)

} catch (Exception e) {
    // Catch any other, more general exceptions.
    SampleResult.setSuccessful(false)
    SampleResult.setResponseCode("500") // Or another appropriate code
    SampleResult.setResponseMessage("General Error: " + e.getMessage())
    SampleResult.setResponseData(e.getStackTraceAsString(), "UTF-8")  // Correct use of getStackTraceAsString()
    log.error("General Error in script", e)
}